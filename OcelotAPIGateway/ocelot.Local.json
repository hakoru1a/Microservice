{
  "GlobalConfiguration": {
    "BaseUrl": "http://api.gateway"
  },
  "ElasticConfiguration": {
    "Uri": "http://localhost:9200",
    "Username": "elastic",
    "Password": "admin"
  },
  "Routes": [
    // Customer API Routes
    {
      "UpstreamPathTemplate": "/customers/{username}",
      "UpstreamHttpMethod": [ "GET" ],
      "DownstreamPathTemplate": "/api/customers/{username}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6003
        }
      ],
      "SwaggerKey": "customer-service"
    },

    // Product API Routes
    // GET Routes (Public)
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [ "GET" ],
      "DownstreamPathTemplate": "/api/products",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ],
      // Rate limit cho route cụ thể
      "RateLimitOptions": {
        "ClientWhitelist": [], // IPs được bypass rate limit
        "EnableRateLimiting": true,
        "Period": "10s", // 1s, 5m, 1h, 1d
        "PeriodTimespan": 2, // Thời gian reset rate limit (giây)
        "Limit": 1 // Số request tối đa trong 1 period
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, //If the service does not response for 2 seconds, it will throw a timeout
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000 //If the service throws a second exception, the service will not be accessible for five seconds
      },
      "FileCacheOptions": {
        "TtlSeconds": 15, // Thời gian cache tồn tại (giây)
        "Region": "ProductsRegion" // Vùng cache để quản lý
      }
    },
    {
      "UpstreamPathTemplate": "/products/{any}",
      "UpstreamHttpMethod": [ "GET" ],
      "DownstreamPathTemplate": "/api/products/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/products/get-product-by-no/{any}",
      "UpstreamHttpMethod": [ "GET" ],
      "DownstreamPathTemplate": "/api/products/get-product-by-no/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ]
    },

    // (Requires Admin Role)
    {
      "UpstreamPathTemplate": "/products/{any}",
      "UpstreamHttpMethod": [ "PUT", "DELETE", "POST" ],
      "DownstreamPathTemplate": "/api/products/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Admin"
      }
    },
    // Basket API Routes
    {
      "UpstreamPathTemplate": "/baskets",
      "UpstreamHttpMethod": [ "POST" ],
      "DownstreamPathTemplate": "/api/baskets",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6004
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/baskets/checkout",
      "UpstreamHttpMethod": [ "POST" ],
      "DownstreamPathTemplate": "/api/baskets/checkout",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6004
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/baskets/{username}",
      "UpstreamHttpMethod": [ "GET", "DELETE" ],
      "DownstreamPathTemplate": "/api/baskets/{username}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6004
        }
      ]
    },

    // Order API Routes
    {
      "UpstreamPathTemplate": "/{version}/orders",
      "UpstreamHttpMethod": [ "POST" ],
      "DownstreamPathTemplate": "/api/{version}/orders",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6005
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/{version}/orders/{any}",
      "UpstreamHttpMethod": [ "GET", "PUT", "DELETE" ],
      "DownstreamPathTemplate": "/api/{version}/orders/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6005
        }
      ]
    },

    // Inventory API Routes
    {
      "UpstreamPathTemplate": "/inventory/items/{any}",
      "UpstreamHttpMethod": [ "GET" ],
      "DownstreamPathTemplate": "/api/inventory/items/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6006
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/inventory/items/{any}/paging",
      "UpstreamHttpMethod": [ "GET" ],
      "DownstreamPathTemplate": "/api/inventory/items/{any}/paging",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6006
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/inventory/{any}",
      "UpstreamHttpMethod": [ "GET", "DELETE" ],
      "DownstreamPathTemplate": "/api/inventory/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6006
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/inventory/purchase/{any}",
      "UpstreamHttpMethod": [ "POST" ],
      "DownstreamPathTemplate": "/api/inventory/purchase/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6006
        }
      ]
    }
  ],
  "SwaggerEndPoints": [
    {
      "Key": "customer-service",
      "Config": [
        {
          "Name": "Customer API",
          "Version": "v1",
          "Url": "http://customer.api/swagger/v1/swagger.json"
        }
      ]
    }
  ]
}